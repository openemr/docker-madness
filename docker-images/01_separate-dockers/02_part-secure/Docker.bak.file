FROM local/gcp/openemr-secure/base

ARG DEBIAN_FRONTEND=noninteractive

#####
###### Security ######
######

### Apache Mods
RUN a2enmod ssl rewrite evasive headers proxy allowmethods socache_dbm

### Clone Config Files
RUN cd /root \
  && git clone https://github.com/openemr/docker-madness

### Cron Jobs
#@todo download this all from a separate secure-server-general repo
RUN chmod 770 docker-madness/helper-scripts/cron-scripts/*.sh \
  && mv docker-madness/helper-scripts/cron-scripts/*.sh /etc/cron.daily
  && rm -f docker-madness

### Move Config Files In Place
#RUN rm -f /etc/apache2/apache2.conf \
  #&& mv docker-madness/helper-scripts/config-files/apache2.conf /etc/apache2/

### ModSecurity
#### Get Modsecurity V3 and Build
#RUN cd /opt && \
#    git clone -b v3/master https://github.com/SpiderLabs/ModSecurity
#RUN cd /opt/ModSecurity && \
#    sh build.sh && \
#    git submodule init && \
#    git submodule update && \
#    ./configure && \
#    make -i && \
#    make -i install
#RUN ln -s /usr/sbin/apache2 /usr/sbin/httpd
#
#### Get Apache Connector
#RUN cd /opt && \
#    git clone https://github.com/SpiderLabs/ModSecurity-apache
#RUN cd /opt/ModSecurity-apache/ && \
#    ./autogen.sh && \
#    ./configure && \
#    make -i && \
#    make install
#
#### Load Module
#RUN mkdir -p /etc/apache2/modsecurity.d/ && \
#    echo "LoadModule security3_module \"$(find /opt/ModSecurity-apache/ -name mod_security3.so)\"" > /etc/apache2/mods-enabled/security.conf && \
#    echo "modsecurity_rules 'SecRuleEngine On'" >> /etc/apache2/mods-enabled/security.conf && \
#    echo "modsecurity_rules_file '/etc/apache2/modsecurity.d/include.conf'" >> /etc/apache2/mods-enabled/security.conf
#
#### Get OWASP Rules
#RUN cd /etc/apache2/modsecurity.d/ \
#    && mv /opt/ModSecurity/modsecurity.conf-recommended /etc/apache2/modsecurity.d/modsecurity.conf \
#    && echo include modsecurity.conf >> /etc/apache2/modsecurity.d/include.conf \
#    && git clone https://github.com/SpiderLabs/owasp-modsecurity-crs owasp-crs \
#    && mv /etc/apache2/modsecurity.d/owasp-crs/crs-setup.conf.example /etc/apache2/modsecurity.d/owasp-crs/crs-setup.conf \
#    && echo include owasp-crs/crs-setup.conf >> /etc/apache2/modsecurity.d/include.conf \
#    && echo include owasp-crs/rules/\*.conf >> /etc/apache2/modsecurity.d/include.conf \
#    && cp /opt/ModSecurity/unicode.mapping /etc/apache2/modsecurity.d/
#
### MAXMIND
# Edit apache.conf to allow maxmind and set <if> block
RUN wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \
  && tar -xvf GeoLite2-Country* && mkdir /usr/local/share/GeoIP \
  && mv GeoLite2-Country*/GeoLite2-Country.mmdb /usr/local/share/GeoIP \
  && wget https://github.com/maxmind/mod_maxminddb/releases/download/1.1.0/mod_maxminddb-1.1.0.tar.gz \
  && tar -xvf mod_maxminddb-1.1.0.tar.gz \
  && cd mod_maxminddb-1.1.0 \
  && ./configure \
  && make -i install

#### Final Edits
#RUN sed -ie 's/setvar:tx.paranoia_level=1/setvar:tx.paranoia_level=2/g' /etc/apache2/modsecurity.d/owasp-crs/crs-setup.conf && \
#  sed -ie 's/SecRuleEngine DetectionOnly/SecRuleEngine On/g' /etc/apache2/modsecurity.d/modsecurity.conf

### ModEvasive
#@todo

### IP Blacklisting
RUN wget https://raw.githubusercontent.com/stamparm/ipsum/master/ipsum.txt \
  && httxt2dbm -i ipsum.txt -o ipsum.dbm \
  && chmod 444 ipsum.dbm \
  && rm -f ipsum.txt
RUN rm -f /etc/apache/ipsum.dbm \
  && mv ipsum.dbm /etc/apache2/ipsum.txt


### Start Server
RUN service apache2 start
EXPOSE 80 443
